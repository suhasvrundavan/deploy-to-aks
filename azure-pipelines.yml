trigger:
  - main
resources:
  - repo: self
variables:
  imageRepo: sampleapp
  tag: $(Build.BuildId)
stages:
  - stage: Build
    displayName: Build image
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: ubuntu-latest
        steps:
          - task: Docker@2
            displayName: Build an image
            inputs:
              containerRegistry: aksacrconnection
              repository: $(imageRepo)
              command: buildAndPush
              Dockerfile: $(Build.SourcesDirectory)/app/Dockerfile
              tags: |
                $(tag)
          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: '$(Pipeline.Workspace)/s/kubernetes'
              artifact: 'manifests'
              publishLocation: 'pipeline'
  - stage: deploy
    displayName: deploy to dev
    dependsOn: Build
    variables:
      acrsecret: aksacrauth
      acrdevurl: suhasaksacr.azurecr.io
      replicaNo: 3
    jobs:
      - deployment: deploy
        displayName: deploy to aks
        environment: 'k8sdev.default'
        pool:
          vmImage: ubuntu-latest
        strategy:
          runOnce:
            deploy:
              steps:
                - task: DownloadPipelineArtifact@2
                  inputs:
                    buildType: 'current'
                    artifactName: 'manifests'
                    targetPath: '$(Pipeline.Workspace)/manifests'
                - task: KubernetesManifest@1
                  inputs:
                    action: 'createSecret'
                    connectionType: 'kubernetesServiceConnection'
                    kubernetesServiceConnection: 'aks-service-connection'
                    namespace: 'default'
                    secretType: 'dockerRegistry'
                    secretName: '$(acrsecret)'
                    dockerRegistryEndpoint: 'aksacrconnection'
                - task: KubernetesManifest@1
                  inputs:
                    action: 'deploy'
                    connectionType: 'kubernetesServiceConnection'
                    kubernetesServiceConnection: 'aks-service-connection'
                    namespace: 'default'
                    manifests: |
                      $(Pipeline.Workspace)/manifests/deployment.yml
                      $(Pipeline.Workspace)/manifests/service.yml
                    containers: '$(acrdevurl)/$(imageRepo):$(tag)'
                    imagePullSecrets: $(acrsecret)
